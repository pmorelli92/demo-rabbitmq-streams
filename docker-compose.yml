services:
  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - "15672:15672"
      - "5552:5552"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_stream advertised_host rabbitmq"
      RABBITMQ_ENABLED_PLUGINS_FILE: /etc/rabbitmq/enabled_plugins
    volumes:
      - ./rabbitmq-enabled-plugins:/etc/rabbitmq/enabled_plugins
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 30s

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  customer:
    build: ./customer
    restart: always
    ports:
      - "8080:8080"
    environment:
      - HTTP_ADDRESS=:8080
      - HTTP_TIMEOUT=5s
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5552
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=customer_db
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  order1:
    build: ./order
    restart: always
    ports:
      - "8081:8080"
    environment:
      - HTTP_ADDRESS=:8080
      - HTTP_TIMEOUT=5s
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5552
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_CONSUMER_NAME=order-service
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=order_db
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  order2:
    build: ./order
    restart: always
    ports:
      - "8082:8080"
    environment:
      - HTTP_ADDRESS=:8080
      - HTTP_TIMEOUT=5s
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5552
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_CONSUMER_NAME=order-service
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=order_db
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
